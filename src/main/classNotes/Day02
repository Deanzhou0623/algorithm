Date: 2022 September 25th
Author: Dean Zhou
topic: algorithm analysis

 1 算法分析
    1）对程序所占用的时间分析 -- 时间复杂度
    2）对程序所占用的空间分析 -- 空间复杂度分析

  1.1 时间复杂度分析
    1）事后分析估算方法

       弊端：得到结果时间较长 ， 受硬件影响大

    2）事前分析估算方法（主要分析方法）
        a. 影响因素：
          1）算法采用策略和方案 （可以人为干预）
          2）编译产生的代码质量
          3）问题的输入规模 （输入量是多少 ，可以人为干预）
          4）机器执行指令的速度

        b. 重点：分析核心操作次数和输入规模

        c. 函数渐近增长
             1）随着输入规模增大，算法常数操作可以忽略不计
             2）随着输入规模的增大，与最高次项相乘的常数因子可以忽略  （4n +1 可以忽略4 ）
             3）最高次项指数大的，随着n的增长，结果也会变的增大特别快
             4）算法函数中n的最高次幂越小，算法效率越高

        d. 算法时间复杂度表示方法 （执行时间 = 执行次数）
            1）大 O 记法
                T(n) = O(F(n))
                1. 用常数1取代运行时间中的所有加法常数
                2. 在修改后的运行次数中，只保留高阶项
                3. 如果最高阶存在且常数因子不为1 ， 则去除与这个项相乘的常数

            算法 1 ： 3次                     大O记法：O(1)

            算法 2 ： n+3 次                  大O记法：O(n)

            算法 3 ：N^2 +2                   大O记法：O(N^2)

        e. 常见大O阶
           1） 常数阶    2次 记做 O(1)
           2） 平方阶
           3） 立方阶
           4） 对数阶   x= log(2)n 记做 O(log n) 忽略底数

           时间复杂度 从低到高
           O(1) < O(logn) < O(n) < O(nlogn) < O(n^2) <O(n^3)

           尽可能追求：  O(1)  O(logn)  O(n)  O(nlogn) 算法大于等于 O(n^2) / O(n^3) 考虑优化


  1.2 空间复杂度分析

    a. java基本数据类型内存占用情况
        byte         1
        short        2
        int          4
        long         8
        float        4
        double       8
        boolean      1
        char         2

    b. 一个引用需要8个字节表示： Date date = new Date() date这个变量需要8个字节

    c. 创建一个对象比如 new Date（）除了 内部数据需要占用内存 ， 该对象本身也有内存开销 ，每个对象的自身开销是16个字节 ，用来保存对象头信息

    e.g         public class A{
                    public int a=1 ;
                }
                int 类型占用4个字节
                a对象自身占用 16个字节
                所有创建该对象一共需要 20个字节 ，由于不足8个，所有扩容到24个字节

    d. java中的数组对象 ，因为需要记录长度而需要额外开销，一个原始数据类型数组一般需要24字节的头信息，（16个字节 对象的自我开销，4个保存长度
        4个填充字节 ）

        e.g  int [] temp= new int[n]  一共需要 24个字节（自身开销）+ n*4个字节



